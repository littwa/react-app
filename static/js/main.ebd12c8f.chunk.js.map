{"version":3,"sources":["components/App.js","index.js"],"names":["Stopwatch","useState","sec","setSec","status","setStatus","waitBtn","useRef","useEffect","emit$","Subject","interval","pipe","takeUntil","subscribe","x","mouse$","fromEvent","current","buff$","debounceTime","buffer","map","list","length","filter","next","style","padding","Date","toISOString","slice","onClick","v","ref","ReactDOM","render","document","querySelector"],"mappings":"qQAKe,SAASA,IAAa,IAAD,EACZC,mBAAS,GADG,mBAC3BC,EAD2B,KACtBC,EADsB,OAENF,mBAAS,QAFH,mBAE3BG,EAF2B,KAEnBC,EAFmB,KAG5BC,EAAUC,mBAEhBC,qBAAU,WACR,IAAMC,EAAQ,IAAIC,IAElBC,YAAS,KACNC,KAAKC,YAAUJ,IACfK,WAAU,iBAAiB,UAAXV,GAAsBD,GAAO,SAAAY,GAAC,OAAIA,EAAI,UAEzD,IAAMC,EAASC,YAAUX,EAAQY,QAAS,SACpCC,EAAQH,EAAOJ,KAAKQ,YAAa,MAgBvC,OAdeJ,EAAOJ,KACpBS,YAAOF,GACPG,aAAI,SAAAC,GACF,OAAOA,EAAKC,UAEdC,aAAO,SAAAV,GAAC,OAAU,IAANA,MAGPD,UAAU,CACfY,KAAM,WACJrB,EAAU,WAIP,kBAAMI,EAAMiB,UAClB,CAACtB,IAgBJ,OACE,yBAAKuB,MAAO,CAAEC,QAAS,SACrB,2BAAI,IAAIC,KAAK3B,GAAK4B,cAAcC,MAAM,GAAI,KAC1C,4BAAQC,QAjBE,WACZ3B,EAAU,WAgBR,SACA,4BAAQ2B,QAdC,WACX3B,EAAU,QACVF,EAAO,KAYL,QACA,4BAAQ6B,QAVE,WACZ7B,EAAO,GACPE,GAAU,SAAA4B,GAAC,MAAW,SAANA,EAAe,QAAUA,OAQvC,SACA,4BAAQC,IAAK5B,GAAb,oBCrDN6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.ebd12c8f.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport { interval, Subject, fromEvent } from \"rxjs\";\r\nimport { takeUntil, debounceTime, buffer, map, filter } from \"rxjs/operators\";\r\n\r\nexport default function Stopwatch() {\r\n  const [sec, setSec] = useState(0);\r\n  const [status, setStatus] = useState(\"stop\");\r\n  const waitBtn = useRef();\r\n\r\n  useEffect(() => {\r\n    const emit$ = new Subject();\r\n\r\n    interval(1000)\r\n      .pipe(takeUntil(emit$))\r\n      .subscribe(() => status === \"start\" && setSec(x => x + 1000));\r\n\r\n    const mouse$ = fromEvent(waitBtn.current, \"click\");\r\n    const buff$ = mouse$.pipe(debounceTime(300));\r\n\r\n    const click$ = mouse$.pipe(\r\n      buffer(buff$),\r\n      map(list => {\r\n        return list.length;\r\n      }),\r\n      filter(x => x === 2),\r\n    );\r\n\r\n    click$.subscribe({\r\n      next: () => {\r\n        setStatus(\"wait\");\r\n      },\r\n    });\r\n\r\n    return () => emit$.next();\r\n  }, [status]);\r\n\r\n  const start = () => {\r\n    setStatus(\"start\");\r\n  };\r\n\r\n  const stop = () => {\r\n    setStatus(\"stop\");\r\n    setSec(0);\r\n  };\r\n\r\n  const reset = () => {\r\n    setSec(0);\r\n    setStatus(v => (v === \"wait\" ? \"start\" : v));\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"30px\" }}>\r\n      <p>{new Date(sec).toISOString().slice(11, 19)}</p>\r\n      <button onClick={start}>Start</button>\r\n      <button onClick={stop}>Stop</button>\r\n      <button onClick={reset}>Reset</button>\r\n      <button ref={waitBtn}>Wait (x2-click)</button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}